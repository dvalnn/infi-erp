name: Build, Test and Deploy to Prod

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  CARGO_TERM_COLOR: always
  SQLX_OFFLINE: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo
            target/
          key: ${{runner.os}}-cargo${{hashFiles('**/Cargo.lock')}}
          restore-keys: ${{runner.os}}-cargo-

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Build and test code
        run: |
          cargo build --verbose
          cargo test --verbose

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/arm64/v8,

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: dvalinn/infi-erp:latest
          platforms: linux/arm64/v8
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}

      - name: Deploy SSH key
        run: |
          mkdir ~/.ssh
          echo "${{secrets.ORACLE_KEY}}" > ~/.ssh/oracle.key
          sudo chmod 700 ~/.ssh/oracle.key
          echo "${{secrets.ORACLE_HOST}}" > ~/.ssh/known_hosts

      - name: Copy docker-compose.yml to oracle vm
        run: scp -i ~/.ssh/oracle.key -o StrictHostKeyChecking=no docker-compose.yml ubuntu@${{vars.ORACLE_IP}}:~

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{vars.ORACLE_IP}}
          username: ubuntu
          key: ${{secrets.ORACLE_KEY}}
          script: |
            cd ~
            export POSTGRES_PASSWORD=${{secrets.POSTGRES_PASSWORD}}
            docker-compose down
            docker-compose pull
            docker-compose up -d
